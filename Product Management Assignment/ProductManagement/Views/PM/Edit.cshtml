@model ProductManagement.Models.ProductManage
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Master.cshtml";
}

<h2>Edit</h2>
<link href="~/Content/toastr.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.js"></script>

@using (Html.BeginForm("Edit", "PM", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <section class="content">
        <div class="row">
            <div class="box box-primary col-lg-1">
                <div class="box-header with-border">
                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Product_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Product_Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product_Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(model => model.Category, new List<SelectListItem> { new SelectListItem { Text = "Books", Value = "Books" }, new SelectListItem { Text = "Car & MotorBike", Value = "Car & MotorBike" }, new SelectListItem { Text = "Computer & Accessories", Value = "Computer & Accessories" }, new SelectListItem { Text = "Electronics", Value = "Electronics" }, new SelectListItem { Text = "Jewellery", Value = "Jewellery" } }, "Select")
                                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(model => model.Quantity, new List<SelectListItem> { new SelectListItem { Text = "1", Value = "1" }, new SelectListItem { Text = "2", Value = "2" }, new SelectListItem { Text = "3", Value = "3" }, new SelectListItem { Text = "4", Value = "4" }, new SelectListItem { Text = "5", Value = "5" } }, "Select")
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Short_Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.TextAreaFor(model => model.Short_Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Short_Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @if (ViewBag.Long_Description == true)
                        {
                            <div class="from-group">
                                <label class=" control-label col-md-2">Long Description</label>
                                <div class="col-md-5">
                                    <textarea name="Long_Description"></textarea>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Long_Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.TextAreaFor(model => model.Long_Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Long_Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        <br /><br /><br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.Small_Image, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                <img src="@Url.Content(Model.Small_Image)" width="100" height="100" />
                                <input type="file" id="file" name="file1" />
                                @Html.ValidationMessageFor(model => model.Small_Image, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @if (ViewBag.Large_Image == true)
                        {
                            <div class="from-group">
                                <label class=" control-label col-md-2">Upload Large Image</label>
                                <div class="col-md-5">
                                    <img src="" alt="Image not Available" height="200" width="200" />
                                    <input type="file" id="file" name="file2" />
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Large_Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    <img src="@Url.Content(Model.Large_Image)" width="100" height="70" />
                                    <input type="file" id="file" name="file2" />
                                </div>
                            </div>
                        }
                        <div class="form-group" >
                            <div class="col-md-offset-2 col-md-10">
                                @Html.ActionLink("Back", "Index", "PM", new { @class = "btn btn-primary" })
                                <input type="submit" value="Save" class="btn btn-success glyphicon glyphicon-floppy-save" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
